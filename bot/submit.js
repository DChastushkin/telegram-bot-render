// bot/submit.js
import { pendingSubmissions } from "./state.js";

export const intentLabel = (intent) =>
  intent === "advice" ? "–Ω—É–∂–µ–Ω —Å–æ–≤–µ—Ç" : "—Ö–æ—á—É –≤—ã—Å–∫–∞–∑–∞—Ç—å—Å—è";

/**
 * draft: { items: [{ srcChatId, srcMsgId, kind, supportsCaption, text }, ...] }
 */
export async function submitDraftToModeration({ telegram, ADMIN_CHAT_ID }, { user, draft, intent }) {
  const info =
    `üë§ –û—Ç: @${user.username || "‚Äî"}\n` +
    `ID: ${user.id}\n` +
    `–ò–º—è: ${[user.first_name, user.last_name].filter(Boolean).join(" ") || "‚Äî"}\n` +
    `–¢–∏–ø –æ–±—Ä–∞—â–µ–Ω–∏—è: ${intentLabel(intent)}`;

  await telegram.sendMessage(ADMIN_CHAT_ID, info);

  const adminCopyMsgIds = [];
  for (const it of draft.items) {
    const copied = await telegram.copyMessage(ADMIN_CHAT_ID, it.srcChatId, it.srcMsgId);
    adminCopyMsgIds.push(copied.message_id);
  }

  const cb = (t) => JSON.stringify({ t, uid: user.id });
  const control = await telegram.sendMessage(
    ADMIN_CHAT_ID,
    "üìù –ù–æ–≤–∞—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–∞—è —Ç–µ–º–∞ (—Å–º. —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã—à–µ).",
    { reply_markup: { inline_keyboard: [[
      { text: "üì£ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data: cb("publish") },
      { text: "üö´ –û—Ç–∫–ª–æ–Ω–∏—Ç—å",   callback_data: cb("reject")  }
    ]] } }
  );

  pendingSubmissions.set(control.message_id, {
    authorId: user.id,
    intent,
    adminCopyMsgIds,
    items: draft.items // –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
  });
}
