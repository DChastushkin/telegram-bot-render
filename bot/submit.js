// bot/submit.js
import { pendingSubmissions } from "./state.js";

export const intentLabel = (intent) =>
  intent === "advice" ? "–Ω—É–∂–µ–Ω —Å–æ–≤–µ—Ç" : "—Ö–æ—á—É –≤—ã—Å–∫–∞–∑–∞—Ç—å—Å—è";

/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —á–µ—Ä–Ω–æ–≤–∏–∫ (–ª—é–±–æ–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è) –≤ –∞–¥–º–∏–Ω-—á–∞—Ç:
 * 1) –∏–Ω—Ñ–æ –æ–± –∞–≤—Ç–æ—Ä–µ
 * 2) –∫–æ–ø–∏—é –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
 * 3) –∫–∞—Ä—Ç–æ—á–∫—É –º–æ–¥–µ—Ä–∞—Ü–∏–∏ (publish/reject)
 * –ò —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–≤—è–∑—å –≤ pendingSubmissions (–≤–∫–ª—é—á–∞—è intent –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞).
 */
export async function submitDraftToModeration({ telegram, ADMIN_CHAT_ID }, { user, draft, intent }) {
  const userInfo =
    `üë§ –û—Ç: @${user.username || "‚Äî"}\n` +
    `ID: ${user.id}\n` +
    `–ò–º—è: ${[user.first_name, user.last_name].filter(Boolean).join(" ") || "‚Äî"}\n` +
    `–¢–∏–ø –æ–±—Ä–∞—â–µ–Ω–∏—è: ${intentLabel(intent)}`;

  await telegram.sendMessage(ADMIN_CHAT_ID, userInfo);

  const copied = await telegram.copyMessage(ADMIN_CHAT_ID, draft.srcChatId, draft.srcMsgId);

  const cb = (t) => JSON.stringify({ t, uid: user.id });
  const control = await telegram.sendMessage(
    ADMIN_CHAT_ID,
    "üìù –ù–æ–≤–∞—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–∞—è —Ç–µ–º–∞ (—Å–º. —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã—à–µ).",
    {
      reply_markup: {
        inline_keyboard: [[
          { text: "üì£ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", callback_data: cb("publish") },
          { text: "üö´ –û—Ç–∫–ª–æ–Ω–∏—Ç—å",   callback_data: cb("reject")  }
        ]]
      }
    }
  );

  pendingSubmissions.set(control.message_id, {
    srcChatId: draft.srcChatId,
    srcMsgId: draft.srcMsgId,
    authorId: user.id,
    adminCopyMsgId: copied.message_id,
    intent,
    kind: draft.kind,
    supportsCaption: draft.supportsCaption,
    text: draft.text || ""
  });
}
