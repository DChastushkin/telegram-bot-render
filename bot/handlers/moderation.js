// bot/handlers/moderation.js
import { newUserMenu, memberMenu, choiceKeyboard } from "../ui.js";
import { isMember } from "../utils.js";
import { submitDraftToModeration } from "../submit.js";
import {
  awaitingTopic, pendingDrafts, pendingRejections, pendingRejectionsByAdmin, pendingSubmissions
} from "../state.js";

export function registerModerationHandlers(bot, env) {
  const { CHANNEL_ID, ADMIN_CHAT_ID } = env;

  // ¬´–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ç–µ–º—É¬ª (—Ç–æ–ª—å–∫–æ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)
  bot.hears("üìù –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ç–µ–º—É/–≤–æ–ø—Ä–æ—Å", async (ctx) => {
    if (!(await isMember(ctx, CHANNEL_ID))) {
      await ctx.reply("‚ùå –í—ã –µ—â—ë –Ω–µ —É—á–∞—Å—Ç–Ω–∏–∫ –∫–∞–Ω–∞–ª–∞. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—Ä–æ—Å–∏—Ç–µ –¥–æ—Å—Ç—É–ø.", newUserMenu());
      return;
    }
    awaitingTopic.add(ctx.from.id);
    await ctx.reply("–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É —Ç–µ–º—É –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º."); // –±–µ–∑ (/cancel)
  });

  bot.command("cancel", async (ctx) => {
    awaitingTopic.delete(ctx.from.id);
    await ctx.reply("–û—Ç–º–µ–Ω–µ–Ω–æ.", await isMember(ctx, CHANNEL_ID) ? memberMenu() : newUserMenu());
  });

  // –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
  bot.on("message", async (ctx, next) => {
    try {
      // 1) –û—Ç–≤–µ—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ —Å –ø—Ä–∏—á–∏–Ω–æ–π (–≤ –∞–¥–º–∏–Ω-—á–∞—Ç–µ)
      if (String(ctx.chat?.id) === String(ADMIN_CHAT_ID)) {
        const replyTo = ctx.message?.reply_to_message;
        if (replyTo) {
          const key = replyTo.message_id;
          const entry = pendingRejections.get(key);
          if (entry) {
            const { handleRejectionReason } = await import("../utils.js");
            await handleRejectionReason(ctx, entry, { ADMIN_CHAT_ID });
            return;
          }
        }
        const planB = pendingRejectionsByAdmin.get(ctx.from.id);
        if (planB) {
          const { handleRejectionReason } = await import("../utils.js");
          await handleRejectionReason(ctx, planB, { ADMIN_CHAT_ID });
          return;
        }
      }

      const uid = ctx.from.id;

      // 2) –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª —Ç–µ–º—É (–ª—é–±–æ–π —Ç–∏–ø), –µ—Å–ª–∏ –∂–¥–∞–ª–∏ —Ç–µ–∫—Å—Ç
      if (awaitingTopic.has(uid)) {
        if (!(await isMember(ctx, CHANNEL_ID))) {
          awaitingTopic.delete(uid);
          await ctx.reply("‚ùå –í—ã –±–æ–ª—å—à–µ –Ω–µ —É—á–∞—Å—Ç–Ω–∏–∫ –∫–∞–Ω–∞–ª–∞. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—Ä–æ—Å–∏—Ç–µ –¥–æ—Å—Ç—É–ø.", newUserMenu());
          return;
        }

        awaitingTopic.delete(uid);

        // —Å–æ—Ö—Ä–∞–Ω—è–µ–º —á–µ—Ä–Ω–æ–≤–∏–∫ (–ª—é–±–æ–π —Ç–∏–ø)
        pendingDrafts.set(uid, { srcChatId: ctx.chat.id, srcMsgId: ctx.message.message_id });

        // –ø—Ä–æ—Å–∏–º –≤—ã–±—Ä–∞—Ç—å —Ç–∏–ø –æ–±—Ä–∞—â–µ–Ω–∏—è (–∏ –¥–∞—ë–º fallback 1/2)
        await ctx.reply(
          "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è (–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ü–∏—Ñ—Ä—É: 1 ‚Äî –Ω—É–∂–µ–Ω —Å–æ–≤–µ—Ç, 2 ‚Äî —Ö–æ—á—É –≤—ã—Å–∫–∞–∑–∞—Ç—å—Å—è):",
          choiceKeyboard()
        );
        return;
      }

      // 3) Fallback: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—Ç–∏–ª ¬´1¬ª/¬´2¬ª –≤–º–µ—Å—Ç–æ –∫–Ω–æ–ø–æ–∫
      if (pendingDrafts.has(uid) && "text" in ctx.message) {
        const t = ctx.message.text.trim();
        if (t === "1" || t === "2") {
          const draft = pendingDrafts.get(uid);
          const intent = t === "1" ? "advice" : "express";

          await submitDraftToModeration(
            { telegram: ctx.telegram, ADMIN_CHAT_ID },
            { user: ctx.from, draft, intent }
          );
          pendingDrafts.delete(uid);

          await ctx.reply("–¢–µ–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.", memberMenu());
          return;
        } else {
          await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤—ã—à–µ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ ¬´1¬ª / ¬´2¬ª.");
          return;
        }
      }

      return next();
    } catch (e) {
      console.error("message handler error:", e);
      return next();
    }
  });
}
